"""
2.8猜牌术
魔术师利用一副牌中的13张黑桃，预先将它们排好后叠在一起，并使牌面朝下。
然后他对观众说：我不看牌，只要数数就可以猜到每张牌是什么，我大声数数，你们听，不信你们就看。
魔术师将从最上面的一张牌开始数，第一张把它翻过来正好是黑桃A，他将黑桃A放在桌子上，然后按顺序从上到下数手中的余牌，
第二次数1、2，将第一张牌放在这叠牌的下面，将第二张牌翻过来，正好是黑桃2，也将它放在桌子上，
第三次数1、2、3，将前面两张依次放在这叠牌的下面，再翻第三张牌正好是黑桃3，
这样依次进行，将13张牌全部翻出来，准确无误。
问魔术师手中的牌原始次序是怎样安排的？
"""

# 我的答案[借鉴]

card = [0] * 13
idx = 0
for number in range(1, 14):
    blank = 0  # reset the count of [0] met
    while blank <= number-1:  # when you met the amount of [0], which means this position should store this amount
        if idx > 12:  # reset the index
            idx = 0
        if card[idx] != 0:  # ![0] met
            idx += 1
        else:  # [0] met
            if blank == number-1:  # requirement is met
                card[idx] = number  # update
            idx += 1  # index still goes on, no matter whether the requirement is met
            blank += 1  # update the blank, in order to jump out of the loop, and in next iteration the blank would be reset
print(card)
