"""
2.8猜牌术
魔术师利用一副牌中的13张黑桃，预先将它们排好后叠在一起，并使牌面朝下。
然后他对观众说：我不看牌，只要数数就可以猜到每张牌是什么，我大声数数，你们听，不信你们就看。
魔术师将从最上面的一张牌开始数，第一张把它翻过来正好是黑桃A，他将黑桃A放在桌子上，然后按顺序从上到下数手中的余牌，
第二次数1、2，将第一张牌放在这叠牌的下面，将第二张牌翻过来，正好是黑桃2，也将它放在桌子上，
第三次数1、2、3，将前面两张依次放在这叠牌的下面，再翻第三张牌正好是黑桃3，
这样依次进行，将13张牌全部翻出来，准确无误。
问魔术师手中的牌原始次序是怎样安排的？
"""

# 我的答案
go = 1
next = 1
card = [1] + [0] * 12
idx_dic = {0: 0}
while go:
    pos = 0
    for i in range(2, next+1):
        pos += i
    print(pos)
    idx_dic.update({next: pos})
    x, t = 0, 0
    while True:
        if x == pos:
            while card[(t+1)%13] != 0:
                t += 1
            card[t%13] = next
            break

        if x < pos and (card[t%13] == 0 or int(t/13) <= int(idx_dic[card[t%13]]/12)):
            x += 1
            t += 1
        else:
            t += 1

    next += 1
    if next > 13:
        go = 0
print(card)
